// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using PexBinaryHeap;
using Microsoft.Pex.Framework;
using NUnit.Framework;
using Microsoft.Pex.Framework.Generated;
using Microsoft.ExtendedReflection.DataAccess;
using System.Collections.Generic;
using PexBinaryHeap.Tests.Pex.Factories;

namespace PexBinaryHeap.Tests.Pex
{
    public partial class BinaryHeapTests
    {
[Test]
[PexGeneratedBy(typeof(BinaryHeapTests))]
public void Add_SeveralValues_CountIsIncrementedByCountOfNewValues198()
{
    BinaryHeap<int, int> binaryHeap;
    binaryHeap = BinaryHeapFactory.Create();
    KeyValuePair<int, int>[] keyValuePairs = new KeyValuePair<int, int>[0];
    this.Add_SeveralValues_CountIsIncrementedByCountOfNewValues<int, int>
        (binaryHeap, keyValuePairs);
    PexAssert.IsNotNull((object)binaryHeap);
}
[Test]
[PexGeneratedBy(typeof(BinaryHeapTests))]
public void Add_SeveralValues_CountIsIncrementedByCountOfNewValues686()
{
    BinaryHeap<int, int> binaryHeap;
    binaryHeap = BinaryHeapFactory.Create();
    KeyValuePair<int, int>[] keyValuePairs = new KeyValuePair<int, int>[1];
    this.Add_SeveralValues_CountIsIncrementedByCountOfNewValues<int, int>
        (binaryHeap, keyValuePairs);
    PexAssert.IsNotNull((object)binaryHeap);
}
[Test]
[PexGeneratedBy(typeof(BinaryHeapTests))]
public void Add_SeveralValues_CountIsIncrementedByCountOfNewValues455()
{
    BinaryHeap<int, int> binaryHeap;
    binaryHeap = BinaryHeapFactory.Create();
    KeyValuePair<int, int>[] keyValuePairs = new KeyValuePair<int, int>[1];
    KeyValuePair<int, int> s0 = new KeyValuePair<int, int>(1, default(int));
    keyValuePairs[0] = s0;
    this.Add_SeveralValues_CountIsIncrementedByCountOfNewValues<int, int>
        (binaryHeap, keyValuePairs);
    PexAssert.IsNotNull((object)binaryHeap);
}
[Test]
[PexGeneratedBy(typeof(BinaryHeapTests))]
public void Add_SeveralValues_CountIsIncrementedByCountOfNewValues553()
{
    BinaryHeap<int, int> binaryHeap;
    binaryHeap = BinaryHeapFactory.Create();
    KeyValuePair<int, int>[] keyValuePairs = new KeyValuePair<int, int>[2];
    this.Add_SeveralValues_CountIsIncrementedByCountOfNewValues<int, int>
        (binaryHeap, keyValuePairs);
    PexAssert.IsNotNull((object)binaryHeap);
}
[Test]
[PexGeneratedBy(typeof(BinaryHeapTests))]
public void Add_SeveralValues_CountIsIncrementedByCountOfNewValues201()
{
    BinaryHeap<int, int> binaryHeap;
    binaryHeap = BinaryHeapFactory.Create();
    KeyValuePair<int, int>[] keyValuePairs = new KeyValuePair<int, int>[3];
    this.Add_SeveralValues_CountIsIncrementedByCountOfNewValues<int, int>
        (binaryHeap, keyValuePairs);
    PexAssert.IsNotNull((object)binaryHeap);
}
[Test]
[PexGeneratedBy(typeof(BinaryHeapTests))]
public void Add_SeveralValues_CountIsIncrementedByCountOfNewValues158()
{
    BinaryHeap<int, int> binaryHeap;
    binaryHeap = BinaryHeapFactory.Create();
    KeyValuePair<int, int>[] keyValuePairs = new KeyValuePair<int, int>[4];
    this.Add_SeveralValues_CountIsIncrementedByCountOfNewValues<int, int>
        (binaryHeap, keyValuePairs);
    PexAssert.IsNotNull((object)binaryHeap);
}
[Test]
[PexGeneratedBy(typeof(BinaryHeapTests))]
public void Add_SeveralValues_CountIsIncrementedByCountOfNewValues85()
{
    BinaryHeap<int, int> binaryHeap;
    binaryHeap = BinaryHeapFactory.Create();
    KeyValuePair<int, int>[] keyValuePairs = new KeyValuePair<int, int>[6];
    this.Add_SeveralValues_CountIsIncrementedByCountOfNewValues<int, int>
        (binaryHeap, keyValuePairs);
    PexAssert.IsNotNull((object)binaryHeap);
}
[Test]
[PexGeneratedBy(typeof(BinaryHeapTests))]
[Ignore("the test state was: path bounds exceeded")]
public void Add_SeveralValues_CountIsIncrementedByCountOfNewValues609()
{
    BinaryHeap<int, int> binaryHeap;
    binaryHeap = BinaryHeapFactory.Create();
    KeyValuePair<int, int>[] keyValuePairs = new KeyValuePair<int, int>[16];
    KeyValuePair<int, int> s0 = new KeyValuePair<int, int>(1, default(int));
    keyValuePairs[1] = s0;
    KeyValuePair<int, int> s1 = new KeyValuePair<int, int>(8, default(int));
    keyValuePairs[2] = s1;
    this.Add_SeveralValues_CountIsIncrementedByCountOfNewValues<int, int>
        (binaryHeap, keyValuePairs);
}
[Test]
[PexGeneratedBy(typeof(BinaryHeapTests))]
[Ignore("the test state was: path bounds exceeded")]
public void Add_SeveralValues_CountIsIncrementedByCountOfNewValues100()
{
    BinaryHeap<int, int> binaryHeap;
    binaryHeap = BinaryHeapFactory.Create();
    KeyValuePair<int, int>[] keyValuePairs = new KeyValuePair<int, int>[15];
    KeyValuePair<int, int> s0 = new KeyValuePair<int, int>(841, default(int));
    keyValuePairs[0] = s0;
    KeyValuePair<int, int> s1 = new KeyValuePair<int, int>(522, default(int));
    keyValuePairs[1] = s1;
    KeyValuePair<int, int> s2 = new KeyValuePair<int, int>(137, default(int));
    keyValuePairs[2] = s2;
    KeyValuePair<int, int> s3 = new KeyValuePair<int, int>(130, default(int));
    keyValuePairs[3] = s3;
    KeyValuePair<int, int> s4 = new KeyValuePair<int, int>(128, default(int));
    keyValuePairs[4] = s4;
    KeyValuePair<int, int> s5 = new KeyValuePair<int, int>(49, default(int));
    keyValuePairs[5] = s5;
    KeyValuePair<int, int> s6 = new KeyValuePair<int, int>(40, default(int));
    keyValuePairs[6] = s6;
    this.Add_SeveralValues_CountIsIncrementedByCountOfNewValues<int, int>
        (binaryHeap, keyValuePairs);
}
    }
}
