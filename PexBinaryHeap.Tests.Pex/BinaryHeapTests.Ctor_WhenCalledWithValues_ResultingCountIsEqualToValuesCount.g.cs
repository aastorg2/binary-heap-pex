// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using System.Collections.Generic;
using NUnit.Framework;
using Microsoft.Pex.Framework.Generated;

namespace PexBinaryHeap.Tests.Pex
{
    public partial class BinaryHeapTests
    {
[Test]
[PexGeneratedBy(typeof(BinaryHeapTests))]
public void Ctor_WhenCalledWithValues_ResultingCountIsEqualToValuesCount16()
{
    KeyValuePair<int, int>[] keyValuePairs = new KeyValuePair<int, int>[0];
    this.Ctor_WhenCalledWithValues_ResultingCountIsEqualToValuesCount<int, int>
        (keyValuePairs);
}
[Test]
[PexGeneratedBy(typeof(BinaryHeapTests))]
public void Ctor_WhenCalledWithValues_ResultingCountIsEqualToValuesCount731()
{
    KeyValuePair<int, int>[] keyValuePairs = new KeyValuePair<int, int>[1];
    this.Ctor_WhenCalledWithValues_ResultingCountIsEqualToValuesCount<int, int>
        (keyValuePairs);
}
[Test]
[PexGeneratedBy(typeof(BinaryHeapTests))]
public void Ctor_WhenCalledWithValues_ResultingCountIsEqualToValuesCount709()
{
    KeyValuePair<int, int>[] keyValuePairs = new KeyValuePair<int, int>[2];
    this.Ctor_WhenCalledWithValues_ResultingCountIsEqualToValuesCount<int, int>
        (keyValuePairs);
}
[Test]
[PexGeneratedBy(typeof(BinaryHeapTests))]
public void Ctor_WhenCalledWithValues_ResultingCountIsEqualToValuesCount419()
{
    KeyValuePair<int, int>[] keyValuePairs = new KeyValuePair<int, int>[3];
    KeyValuePair<int, int> s0 = new KeyValuePair<int, int>(1, default(int));
    keyValuePairs[1] = s0;
    this.Ctor_WhenCalledWithValues_ResultingCountIsEqualToValuesCount<int, int>
        (keyValuePairs);
}
[Test]
[PexGeneratedBy(typeof(BinaryHeapTests))]
public void Ctor_WhenCalledWithValues_ResultingCountIsEqualToValuesCount549()
{
    KeyValuePair<int, int>[] keyValuePairs = new KeyValuePair<int, int>[3];
    KeyValuePair<int, int> s0 = new KeyValuePair<int, int>(3, default(int));
    keyValuePairs[0] = s0;
    KeyValuePair<int, int> s1 = new KeyValuePair<int, int>(3, default(int));
    keyValuePairs[1] = s1;
    this.Ctor_WhenCalledWithValues_ResultingCountIsEqualToValuesCount<int, int>
        (keyValuePairs);
}
[Test]
[PexGeneratedBy(typeof(BinaryHeapTests))]
public void Ctor_WhenCalledWithValues_ResultingCountIsEqualToValuesCount672()
{
    KeyValuePair<int, int>[] keyValuePairs = new KeyValuePair<int, int>[4];
    KeyValuePair<int, int> s0 = new KeyValuePair<int, int>(1, default(int));
    keyValuePairs[1] = s0;
    this.Ctor_WhenCalledWithValues_ResultingCountIsEqualToValuesCount<int, int>
        (keyValuePairs);
}
[Test]
[PexGeneratedBy(typeof(BinaryHeapTests))]
public void Ctor_WhenCalledWithValues_ResultingCountIsEqualToValuesCount756()
{
    KeyValuePair<int, int>[] keyValuePairs = new KeyValuePair<int, int>[5];
    KeyValuePair<int, int> s0 = new KeyValuePair<int, int>(1, default(int));
    keyValuePairs[1] = s0;
    this.Ctor_WhenCalledWithValues_ResultingCountIsEqualToValuesCount<int, int>
        (keyValuePairs);
}
    }
}
